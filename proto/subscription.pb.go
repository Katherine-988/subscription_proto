// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: subscription.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OptionType int32

const (
	OptionType_UNKNOWN   OptionType = 0 // 未知
	OptionType_SUBSCRIBE OptionType = 1 // 订阅
	OptionType_CANCLE    OptionType = 2 // 取消
)

// Enum value maps for OptionType.
var (
	OptionType_name = map[int32]string{
		0: "UNKNOWN",
		1: "SUBSCRIBE",
		2: "CANCLE",
	}
	OptionType_value = map[string]int32{
		"UNKNOWN":   0,
		"SUBSCRIBE": 1,
		"CANCLE":    2,
	}
)

func (x OptionType) Enum() *OptionType {
	p := new(OptionType)
	*p = x
	return p
}

func (x OptionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OptionType) Descriptor() protoreflect.EnumDescriptor {
	return file_subscription_proto_enumTypes[0].Descriptor()
}

func (OptionType) Type() protoreflect.EnumType {
	return &file_subscription_proto_enumTypes[0]
}

func (x OptionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OptionType.Descriptor instead.
func (OptionType) EnumDescriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{0}
}

type NeedFeedback int32

const (
	NeedFeedback_DONOTFEEDBACK NeedFeedback = 0 // 不需要发送反馈消息
	NeedFeedback_DOFEEDBACK    NeedFeedback = 1 // 需要发送反馈消息
)

// Enum value maps for NeedFeedback.
var (
	NeedFeedback_name = map[int32]string{
		0: "DONOTFEEDBACK",
		1: "DOFEEDBACK",
	}
	NeedFeedback_value = map[string]int32{
		"DONOTFEEDBACK": 0,
		"DOFEEDBACK":    1,
	}
)

func (x NeedFeedback) Enum() *NeedFeedback {
	p := new(NeedFeedback)
	*p = x
	return p
}

func (x NeedFeedback) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NeedFeedback) Descriptor() protoreflect.EnumDescriptor {
	return file_subscription_proto_enumTypes[1].Descriptor()
}

func (NeedFeedback) Type() protoreflect.EnumType {
	return &file_subscription_proto_enumTypes[1]
}

func (x NeedFeedback) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NeedFeedback.Descriptor instead.
func (NeedFeedback) EnumDescriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{1}
}

type RetCode int32

const (
	RetCode_SUCCESS RetCode = 0  //成功，只要消息成功写入了MQ，就算成功
	RetCode_ERROR   RetCode = -1 //失败
)

// Enum value maps for RetCode.
var (
	RetCode_name = map[int32]string{
		0:  "SUCCESS",
		-1: "ERROR",
	}
	RetCode_value = map[string]int32{
		"SUCCESS": 0,
		"ERROR":   -1,
	}
)

func (x RetCode) Enum() *RetCode {
	p := new(RetCode)
	*p = x
	return p
}

func (x RetCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RetCode) Descriptor() protoreflect.EnumDescriptor {
	return file_subscription_proto_enumTypes[2].Descriptor()
}

func (RetCode) Type() protoreflect.EnumType {
	return &file_subscription_proto_enumTypes[2]
}

func (x RetCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RetCode.Descriptor instead.
func (RetCode) EnumDescriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{2}
}

type Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceID string `protobuf:"bytes,1,opt,name=TraceID,proto3" json:"TraceID,omitempty"`
}

func (x *Header) Reset() {
	*x = Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{0}
}

func (x *Header) GetTraceID() string {
	if x != nil {
		return x.TraceID
	}
	return ""
}

type SubscriptionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Head       *Header    `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	OptionType OptionType `protobuf:"varint,2,opt,name=optionType,proto3,enum=pb.OptionType" json:"optionType,omitempty"`
	UserID     string     `protobuf:"bytes,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ProductID  int32      `protobuf:"varint,4,opt,name=ProductID,proto3" json:"ProductID,omitempty"`
}

func (x *SubscriptionReq) Reset() {
	*x = SubscriptionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionReq) ProtoMessage() {}

func (x *SubscriptionReq) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionReq.ProtoReflect.Descriptor instead.
func (*SubscriptionReq) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{1}
}

func (x *SubscriptionReq) GetHead() *Header {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *SubscriptionReq) GetOptionType() OptionType {
	if x != nil {
		return x.OptionType
	}
	return OptionType_UNKNOWN
}

func (x *SubscriptionReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SubscriptionReq) GetProductID() int32 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

type SubscriptionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code RetCode `protobuf:"varint,1,opt,name=Code,proto3,enum=pb.RetCode" json:"Code,omitempty"`
	Msg  string  `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *SubscriptionRsp) Reset() {
	*x = SubscriptionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionRsp) ProtoMessage() {}

func (x *SubscriptionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionRsp.ProtoReflect.Descriptor instead.
func (*SubscriptionRsp) Descriptor() ([]byte, []int) {
	return file_subscription_proto_rawDescGZIP(), []int{2}
}

func (x *SubscriptionRsp) GetCode() RetCode {
	if x != nil {
		return x.Code
	}
	return RetCode_SUCCESS
}

func (x *SubscriptionRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_subscription_proto protoreflect.FileDescriptor

var file_subscription_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x22, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x44, 0x22, 0x97, 0x01, 0x0a,
	0x0f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x1e, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64,
	0x12, 0x2e, 0x0a, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x22, 0x44, 0x0a, 0x0f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x2a, 0x34, 0x0a, 0x0a,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x42, 0x53, 0x43,
	0x52, 0x49, 0x42, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x41, 0x4e, 0x43, 0x4c, 0x45,
	0x10, 0x02, 0x2a, 0x31, 0x0a, 0x0c, 0x4e, 0x65, 0x65, 0x64, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x4f, 0x4e, 0x4f, 0x54, 0x46, 0x45, 0x45, 0x44, 0x42,
	0x41, 0x43, 0x4b, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x4f, 0x46, 0x45, 0x45, 0x44, 0x42,
	0x41, 0x43, 0x4b, 0x10, 0x01, 0x2a, 0x2a, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x12, 0x0a,
	0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0x01, 0x32, 0x51, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x73, 0x70, 0x22, 0x00, 0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_subscription_proto_rawDescOnce sync.Once
	file_subscription_proto_rawDescData = file_subscription_proto_rawDesc
)

func file_subscription_proto_rawDescGZIP() []byte {
	file_subscription_proto_rawDescOnce.Do(func() {
		file_subscription_proto_rawDescData = protoimpl.X.CompressGZIP(file_subscription_proto_rawDescData)
	})
	return file_subscription_proto_rawDescData
}

var file_subscription_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_subscription_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_subscription_proto_goTypes = []interface{}{
	(OptionType)(0),         // 0: pb.OptionType
	(NeedFeedback)(0),       // 1: pb.NeedFeedback
	(RetCode)(0),            // 2: pb.RetCode
	(*Header)(nil),          // 3: pb.Header
	(*SubscriptionReq)(nil), // 4: pb.SubscriptionReq
	(*SubscriptionRsp)(nil), // 5: pb.SubscriptionRsp
}
var file_subscription_proto_depIdxs = []int32{
	3, // 0: pb.SubscriptionReq.head:type_name -> pb.Header
	0, // 1: pb.SubscriptionReq.optionType:type_name -> pb.OptionType
	2, // 2: pb.SubscriptionRsp.Code:type_name -> pb.RetCode
	4, // 3: pb.SubscriptionService.Subscription:input_type -> pb.SubscriptionReq
	5, // 4: pb.SubscriptionService.Subscription:output_type -> pb.SubscriptionRsp
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_subscription_proto_init() }
func file_subscription_proto_init() {
	if File_subscription_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_subscription_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_subscription_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_subscription_proto_goTypes,
		DependencyIndexes: file_subscription_proto_depIdxs,
		EnumInfos:         file_subscription_proto_enumTypes,
		MessageInfos:      file_subscription_proto_msgTypes,
	}.Build()
	File_subscription_proto = out.File
	file_subscription_proto_rawDesc = nil
	file_subscription_proto_goTypes = nil
	file_subscription_proto_depIdxs = nil
}
